plugins {
	id 'fabric-loom' version '0.8-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
	accessWidener = file("src/main/resources/markdown_chat.accesswidener")
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	implementation 'com.google.code.findbugs:jsr305:3.0.1'

	implementation 'com.atlassian.commonmark:commonmark:0.15.2'
	include 'com.atlassian.commonmark:commonmark:0.15.2'

	implementation 'com.atlassian.commonmark:commonmark-ext-autolink:0.15.2'
	include 'com.atlassian.commonmark:commonmark-ext-autolink:0.15.2'
	include 'org.nibor.autolink:autolink:0.10.0'

	implementation 'com.atlassian.commonmark:commonmark-ext-gfm-strikethrough:0.15.2'
	include 'com.atlassian.commonmark:commonmark-ext-gfm-strikethrough:0.15.2'
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 16
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
}
